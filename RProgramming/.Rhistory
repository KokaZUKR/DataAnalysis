else if (outcome == 'pneumonia') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
}
else if (!is.element(state, valid_states)) {
stop("invalid state")
}
else if (!is.element(outcome, valid_outcomes)) {
stop("invalid outcome")
}
if (length(ranked_state) > 1) {
ranked_state <- sort(ranked_state)[2]
print(ranked_state)
}
else print(ranked_state)
}
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
valid_states <- unique(outcome_data$State)
valid_outcomes <- c('heart attack', 'heart failure', 'pneumonia')
valid_choices <- c('worst', 'best')
if (num == "best"){
source('best.R')
best(state, outcome)
stop()
}
else if (num == "worst") {
source('worst.R')
worst(state, outcome)
stop()
}
if (is.element(state, valid_states) & is.element(outcome, valid_outcomes)) {
outcome_data <- outcome_data[outcome_data$State == state,]
if (num > length(outcome_data$Hospital.Name)){
print(NA)
stop("Number is larger that the number of hospitals in that state")
}
if (outcome == 'heart attack') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
else if (outcome == 'heart failure') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
else if (outcome == 'pneumonia') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
}
else if (!is.element(state, valid_states)) {
stop("invalid state")
}
else if (!is.element(outcome, valid_outcomes)) {
stop("invalid outcome")
}
if (length(ranked_state) > 1) {
ranked_state <- sort(ranked_state)[2]
print(ranked_state)
}
else print(ranked_state)
}
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
valid_states <- unique(outcome_data$State)
valid_outcomes <- c('heart attack', 'heart failure', 'pneumonia')
valid_choices <- c('worst', 'best')
if (num == "best"){
source('best.R')
best(state, outcome)
return()
}
else if (num == "worst") {
source('worst.R')
worst(state, outcome)
return()
}
if (is.element(state, valid_states) & is.element(outcome, valid_outcomes)) {
outcome_data <- outcome_data[outcome_data$State == state,]
if (num > length(outcome_data$Hospital.Name)){
print(NA)
stop("Number is larger that the number of hospitals in that state")
}
if (outcome == 'heart attack') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
else if (outcome == 'heart failure') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
else if (outcome == 'pneumonia') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
}
else if (!is.element(state, valid_states)) {
stop("invalid state")
}
else if (!is.element(outcome, valid_outcomes)) {
stop("invalid outcome")
}
if (length(ranked_state) > 1) {
ranked_state <- sort(ranked_state)[2]
print(ranked_state)
}
else print(ranked_state)
}
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "best")
rankhospital("MN", "heart attack", 5000)
rankhospital("MN", "heart attack", 5000)
rankhospital <- function(state, outcome, num = "best") {
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
valid_states <- unique(outcome_data$State)
valid_outcomes <- c('heart attack', 'heart failure', 'pneumonia')
valid_choices <- c('worst', 'best')
if (num == "best"){
source('best.R')
best(state, outcome)
return()
}
else if (num == "worst") {
source('worst.R')
worst(state, outcome)
return()
}
if (is.element(state, valid_states) & is.element(outcome, valid_outcomes)) {
outcome_data <- outcome_data[outcome_data$State == state,]
if (num > length(outcome_data$Hospital.Name)){
print("Number is larger that the number of hospitals in that state")
return(NA)
}
if (outcome == 'heart attack') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
else if (outcome == 'heart failure') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
else if (outcome == 'pneumonia') {
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)[num]
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == rank_value, 2]
ranked_state <- ranked_state[!is.na(ranked_state)]
}
}
else if (!is.element(state, valid_states)) {
stop("invalid state")
}
else if (!is.element(outcome, valid_outcomes)) {
stop("invalid outcome")
}
if (length(ranked_state) > 1) {
ranked_state <- sort(ranked_state)[2]
print(ranked_state)
}
else print(ranked_state)
}
rankhospital("MN", "heart attack", 5000)
source('rankhospital.R')
rankhospital("MN", "heart attack", 5)
rankhospital("TX", "heart attack", 5)
valid_states <- unique(outcome$State)
outcome_vector <- c('heart attack')*length(valid_states)
outcome_vector <- rep(c('heart attack'),length(valid_states))
num_vector <- rep(c('best'), length(valid_states))
mapply(rankhospital, valid_states, outcome_vector, num_vector)
states <- mapply(rankhospital, valid_states, outcome_vector, num_vector)
states
names(states)
(states,names(states))
states[1]
states$AL
states
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
states
source('rankhospital.R')
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
mapply(rankhospital, valid_states, outcome_vector, num_vector)
valid_states
outcome_vector
num_vector
source('best.R')
mapply(best, valid_states, outcome_vector)
states <- mapply(best, valid_states, outcome_vector)
ranked_states <- mapply(rankhospital, valid_states, outcome_vector, num_vector)
best_states <- mapply(best, valid_states, outcome_vector)
source('worst.R')
worst_states <- mapply(worst, valid_states, outcome_vector)
worst_states
source('worst.R')
worst_states <- mapply(worst, valid_states, outcome_vector)
num_vector
num_vector <- rep(c(20), length(valid_states))
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
states
names[1]
names[2]
names[3]
names[3:]
names[,1]
names[1]
states
states$AL
worst_states[1]
worst_states[1][1]
unlist(states)
matrix(unlist(states))
data.frame(matrix(unlist(states)))
data.frame(matrix(unlist(states), byrow = T))
data.frame(matrix(unlist(states),ncol = 2, byrow = T))
mdata <- data.frame(matrix(unlist(states), byrow = T))
View(mdata)
mdata <- data.frame(matrix(unlist(states),ncol = 2, byrow = T))
unlist(states)
mdata <- unlist(states)
mdata
names(mdata)
library (plyr)
df <- ldply (states, data.frame)
View(df)
rankall <- function(outcome, num = "best") {
source('rankhospital.R')
valid_states <- unique(outcome_data$State)
outcome_vector <- rep(c(outcome),length(valid_states))
num_vector <- rep(c(num), length(valid_states))
if (num == "best"){
source('best.R')
states <- mapply(best, valid_states, outcome_vector)
}
else if (num == "worst"){
source('worst.R')
states <- mapply(worst, valid_states, outcome_vector)
}
else {
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
}
library (plyr)
df <- ldply (states, data.frame)
return(df)
}
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
View(df)
df <- ldply (best_states, data.frame)
View(df)
df <- ldply (worst_states, data.frame)
View(df)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
as.data.frame(states)
matrix(unlist(states), ncol = 2, byrow = TRUE)
do.call(rbind,lapply(states,matrix,ncol=2,byrow=TRUE))
rankall <- function(outcome, num = "best") {
source('rankhospital.R')
valid_states <- unique(outcome_data$State)
outcome_vector <- rep(c(outcome),length(valid_states))
num_vector <- rep(c(num), length(valid_states))
if (num == "best"){
source('best.R')
states <- mapply(best, valid_states, outcome_vector)
}
else if (num == "worst"){
source('worst.R')
states <- mapply(worst, valid_states, outcome_vector)
}
else {
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
}
library (plyr)
df <- ldply (states, data.frame)
print(df)
return(df)
}
tail(rankall("pneumonia", "worst"), 3)
df <- tail(rankall("pneumonia", "worst"), 3)
df <- head(rankall("heart attack", 20), 10)
View(df)
rankall <- function(outcome, num = "best") {
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
valid_states <- unique(outcome_data$State)
outcome_vector <- rep(c(outcome),length(valid_states))
num_vector <- rep(c(num), length(valid_states))
if (num == "best"){
source('best.R')
states <- mapply(best, valid_states, outcome_vector)
}
else if (num == "worst"){
source('worst.R')
states <- mapply(worst, valid_states, outcome_vector)
}
else {
source('rankhospital.R')
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
}
library (plyr)
df <- ldply (states, data.frame)
print(df)
return(df)
}
df <- head(rankall("heart attack", 20), 10)
View(df)
rankall <- function(outcome, num = "best") {
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
valid_states <- unique(outcome_data$State)
outcome_vector <- rep(c(outcome),length(valid_states))
num_vector <- rep(c(num), length(valid_states))
if (num == "best"){
source('best.R')
states <- mapply(best, valid_states, outcome_vector)
}
else if (num == "worst"){
source('worst.R')
states <- mapply(worst, valid_states, outcome_vector)
}
else {
source('rankhospital.R')
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
}
library (plyr)
df <- ldply (states, data.frame)
return(df)
}
df <- tail(rankall("pneumonia", "worst"), 3)
View(df)
tail(rankall("heart failure"), 10)
outcome <- "heart failure"
num = 10
source('rankall.R')
rankall("heart failure", 10)
outcome <- "heart failure"
num  <- 10
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
valid_states <- unique(outcome_data$State)
outcome_vector <- rep(c(outcome),length(valid_states))
num_vector <- rep(c(num), length(valid_states))
states = mapply(rankhospital, valid_states, outcome_vector, num_vector)
states[1]
unlist(states)
as.matrix(unlist(states))
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
df <- rankall("pneumonia", "worst")
df
df[1]
order(df[1])
df[order(df[1]),]
tail(rankall("pneumonia", "worst"), 3)
df[order(df[1]),]
tail(df[order(df[1]),], 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
df <- rankall("heart failure")
tail(df, 10)
tail(df[order(df[1]),], 10)
df <- rankall("heart attack", 20)
head(df[order(df[1]),], 10)
df <- rankall("heart attack", 20)
head(df[order(df[1]),], 10)
df <- rankall("heart attack", 20)
head(df[order(df[1]),], 10)
df <- rankall("heart attack", 20)
head(df[order(df[1]),], 10)
df <- rankall("heart attack", 20)
head(df[order(df[1]),], 10)
rankhospital("FL", "heart attack", 20)
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
df <- rankhospital("FL", "heart attack", 20)
sort(df)
rankhospital("FL", "heart attack", 20)
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
rankhospital("FL", "heart attack", 20)
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
df <- rankhospital("FL", "heart attack", 20)
df
sort(df)
sort(df, decreasing = T)
sort(df, decreasing = T)[1]
source('rankhospital.R')
rankhospital("FL", "heart attack", 20)
df <- rankall("heart attack", 20)
head(df[order(df[1]),], 10)
head(df[order(df[1]),], 10)
rankhospital("AR", "heart attack", 20)
rankhospital("AR", "heart attack", 20)
source('rankhospital.R')
rankhospital("AR", "heart attack", 20)
rankhospital("AR", "heart attack", 21)
rankhospital("AR", "heart attack", 22)
rankhospital("AR", "heart attack", 23)
rankhospital("AR", "heart attack", 19)
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia <- as.numeric(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
valid_states <- unique(outcome_data$State)
valid_outcomes <- c('heart attack', 'heart failure', 'pneumonia')
valid_choices <- c('worst', 'best')
outcome_data <- outcome_data[outcome_data$State == "AR",]
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[num]
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[20]
rank_value
ranked_state <- outcome_data[outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == rank_value, 2]
ranked_state
rank_value
sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[20]
sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome_data[order(outcome_data[1]),], 10)
outcome_data[order(outcome_data[1]),]
outcome_data[order(outcome_data[1]),2]
outcome_data[order(outcome_data[2]),2]
View(outcome_data)
outcome_data[order(outcome_data[7]),2]
outcome_data[order(outcome_data[11]),2]
rank_value
outcome_data[order(outcome_data[11]),2][20]
source('rankhospital.R')
rankhospital("AR", "heart attack", 19)
rankhospital("AR", "heart attack", 20)
rankhospital("AL", "heart attack", 20)
rankhospital("AZ", "heart attack", 20)
rankhospital("CA", "heart attack", 20)
rankhospital("CO", "heart attack", 20)
source('rankhospital.R')
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
df <- rankall("heart attack", 20)
df
dimnames(df) <- c('state','hospital')
dimnames(df) <- list('state','hospital')
dimnames(df) <- list(c('state'),c('hospital')
)
colnames(df) <- paste("state")
View(df)
source('rankall.R')
head(rankall("heart attack", 20), 10)
df
df[order(df[1]),]
source('rankall.R')
head(rankall("heart attack", 20), 10)
rankhospital("FL","heart attack", 20)
rankhospital("FL","heart attack", 21)
rankhospital("FL","heart attack", 19)
rankhospital("FL","heart attack", 1)
rankhospital("FL","heart attack", 2)
rankhospital("FL","heart attack", 3)
rankhospital("FL","heart attack", 4)
rankhospital("FL","heart attack", 5)
rankhospital("FL","heart attack", 16)
outcome_data[order(outcome_data[17]),2][16]
outcome_data <- read.csv('outcome-of-care-measures.csv', colClasses = 'character')
outcome_data <- na.omit(outcome_data)
outcome_data <- outcome_data[outcome_data$State == "FL",]
outcome_data[order(outcome_data[17]),2][16]
outcome_data[order(outcome_data[17]),2][20]
rank_value <- sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[20]
ranked_state <- outcome_data[order(outcome_data[11]),2][20]
ranked_state
outcome_data[order(outcome_data[11]),2]
sort(outcome_data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)[num]
View(outcome_data)
